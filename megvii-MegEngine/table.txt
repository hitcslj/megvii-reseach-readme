| [MegEngine](https://github.com/MegEngine/MegEngine)   <a href="https://github.com/MegEngine/MegEngine"><img src="https://img.shields.io/github/stars/MegEngine/MegEngine?style=social" /></a> | MegEngine 是一个快速、可拓展、易于使用且支持自动求导的深度学习框架 |
| [MegFlow](https://github.com/MegEngine/MegFlow)   <a href="https://github.com/MegEngine/MegFlow"><img src="https://img.shields.io/github/stars/MegEngine/MegFlow?style=social" /></a> | Efficient ML solution for long-tailed demands |
| [Models](https://github.com/MegEngine/Models)   <a href="https://github.com/MegEngine/Models"><img src="https://img.shields.io/github/stars/MegEngine/Models?style=social" /></a> | 采用MegEngine实现的各种主流深度学习模型 |
| [MegSpot](https://github.com/MegEngine/MegSpot)   <a href="https://github.com/MegEngine/MegSpot"><img src="https://img.shields.io/github/stars/MegEngine/MegSpot?style=social" /></a> | MegSpot是一款高效、专业、跨平台的图片&视频对比应用 |
| [RepLKNet](https://github.com/MegEngine/RepLKNet)   <a href="https://github.com/MegEngine/RepLKNet"><img src="https://img.shields.io/github/stars/MegEngine/RepLKNet?style=social" /></a> | Official MegEngine implementation of RepLKNet |
| [MegPeak](https://github.com/MegEngine/MegPeak)   <a href="https://github.com/MegEngine/MegPeak"><img src="https://img.shields.io/github/stars/MegEngine/MegPeak?style=social" /></a> | Megpeak is a tool for testing processor peak computation, now support arm, x86 and GPU driven by OpenCL processor. |
| [PMRID](https://github.com/MegEngine/PMRID)   <a href="https://github.com/MegEngine/PMRID"><img src="https://img.shields.io/github/stars/MegEngine/PMRID?style=social" /></a> | ECCV2020 - Practical Deep Raw Image Denoising on Mobile Devices |
| [NBNet](https://github.com/MegEngine/NBNet)   <a href="https://github.com/MegEngine/NBNet"><img src="https://img.shields.io/github/stars/MegEngine/NBNet?style=social" /></a> | NBNet: Noise Basis Learning for Image Denoising with Subspace Projection |
| [Hub](https://github.com/MegEngine/Hub)   <a href="https://github.com/MegEngine/Hub"><img src="https://img.shields.io/github/stars/MegEngine/Hub?style=social" /></a> | 基于旷视研究院领先的深度学习算法，提供满足多业务场景的预训练模型 |
| [YOLOX](https://github.com/MegEngine/YOLOX)   <a href="https://github.com/MegEngine/YOLOX"><img src="https://img.shields.io/github/stars/MegEngine/YOLOX?style=social" /></a> | MegEngine implementation of YOLOX |
| [cutlass](https://github.com/MegEngine/cutlass)   <a href="https://github.com/MegEngine/cutlass"><img src="https://img.shields.io/github/stars/MegEngine/cutlass?style=social" /></a> | CUDA Templates for Linear Algebra Subroutines |
| [MegRay](https://github.com/MegEngine/MegRay)   <a href="https://github.com/MegEngine/MegRay"><img src="https://img.shields.io/github/stars/MegEngine/MegRay?style=social" /></a> | A communication library for deep learning |
| [Docs](https://github.com/MegEngine/Docs)   <a href="https://github.com/MegEngine/Docs"><img src="https://img.shields.io/github/stars/MegEngine/Docs?style=social" /></a> | MegEngine Documentations |
| [ICD](https://github.com/MegEngine/ICD)   <a href="https://github.com/MegEngine/ICD"><img src="https://img.shields.io/github/stars/MegEngine/ICD?style=social" /></a> | This is the official implementation of the paper "Instance-conditional Knowledge Distillation for Object Detection", based on MegEngine and Pytorch |
| [mgeconvert](https://github.com/MegEngine/mgeconvert)   <a href="https://github.com/MegEngine/mgeconvert"><img src="https://img.shields.io/github/stars/MegEngine/mgeconvert?style=social" /></a> | MegEngine到其他框架的转换器 |
| [GyroFlow](https://github.com/MegEngine/GyroFlow)   <a href="https://github.com/MegEngine/GyroFlow"><img src="https://img.shields.io/github/stars/MegEngine/GyroFlow?style=social" /></a> | The official MegEngine implementation of the ICCV 2021 paper: GyroFlow: Gyroscope-Guided Unsupervised Optical Flow Learning |
| [Resource](https://github.com/MegEngine/Resource)   <a href="https://github.com/MegEngine/Resource"><img src="https://img.shields.io/github/stars/MegEngine/Resource?style=social" /></a> | 天元（MegEngine）的周边资源，包括技术文章、活动、最新资讯等。 |
| [Documentation](https://github.com/MegEngine/Documentation)   <a href="https://github.com/MegEngine/Documentation"><img src="https://img.shields.io/github/stars/MegEngine/Documentation?style=social" /></a> | MegEngine Official Documentation |
| [ECCV2022-RIFE](https://github.com/MegEngine/ECCV2022-RIFE)   <a href="https://github.com/MegEngine/ECCV2022-RIFE"><img src="https://img.shields.io/github/stars/MegEngine/ECCV2022-RIFE?style=social" /></a> | Official MegEngine Implementation of Real-Time Intermediate Flow Estimation for Video Frame Interpolation |
| [cutlass-bak](https://github.com/MegEngine/cutlass-bak)   <a href="https://github.com/MegEngine/cutlass-bak"><img src="https://img.shields.io/github/stars/MegEngine/cutlass-bak?style=social" /></a> | modified cutlass |
| [OMNet](https://github.com/MegEngine/OMNet)   <a href="https://github.com/MegEngine/OMNet"><img src="https://img.shields.io/github/stars/MegEngine/OMNet?style=social" /></a> | OMNet: Learning Overlapping Mask for Partial-to-Partial Point Cloud Registration, ICCV 2021, MegEngine implementation |
| [End-to-end-ASR-Transformer](https://github.com/MegEngine/End-to-end-ASR-Transformer)   <a href="https://github.com/MegEngine/End-to-end-ASR-Transformer"><img src="https://img.shields.io/github/stars/MegEngine/End-to-end-ASR-Transformer?style=social" /></a> | An end to end ASR Transformer model training repo |
| [FINet](https://github.com/MegEngine/FINet)   <a href="https://github.com/MegEngine/FINet"><img src="https://img.shields.io/github/stars/MegEngine/FINet?style=social" /></a> | This is the official MegEngine implementation of FINet: Dual Branches Feature Interaction for Partial-to-Partial Point Cloud Registration, AAAI 2022 |
| [swin-transformer](https://github.com/MegEngine/swin-transformer)   <a href="https://github.com/MegEngine/swin-transformer"><img src="https://img.shields.io/github/stars/MegEngine/swin-transformer?style=social" /></a> | Swin-Transformer implementation in MegEngine. This is a showcase for training on GPU with less memory by leveraging MegEngine DTR technique |
| [NeRF](https://github.com/MegEngine/NeRF)   <a href="https://github.com/MegEngine/NeRF"><img src="https://img.shields.io/github/stars/MegEngine/NeRF?style=social" /></a> | NeRF implementation in MegEngine |
